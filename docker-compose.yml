version: "3.9"
name: bus-khoja-stack

services:
  postgres:
    image: postgres:15
    container_name: bus-khoja-postgres
    secrets:
      - db-password
    environment:
      POSTGRES_DB: bus-khoja
      POSTGRES_USER: Ruhan
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U Ruhan -d bus-khoja"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bus-khoja-backend
    # command: python main.py
    environment:
      DATABASE_URL: postgresql://Ruhan:hmmmmmmmmm@postgres:5432/bus-khoja
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.buskhoja.xyz`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bus-khoja-frontend
    environment:
      NEXT_PUBLIC_API_URL: https://api.buskhoja.xyz
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`buskhoja.xyz`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend
    restart: unless-stopped

  reverse-proxy:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--api.insecure=true"
      - "--certificatesResolvers.myresolver.acme.tlsChallenge=true"
      - "--certificatesResolvers.myresolver.acme.email=ruhan@buskhoja.xyz"
      - "--certificatesResolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /info/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

secrets:
  db-password:
    file: /info/password.txt

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: /info/db-data
      o: bind
  letsencrypt:
    driver: local
    driver_opts:
      type: none
      device: /info/letsencrypt
      o: bind
